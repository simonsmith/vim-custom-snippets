priority 1

snippet =>> "Inline arrow function" A
(${1:args}) => {$2};
endsnippet

snippet c=> "Const Function" bA
const ${1:name} = (${2:args}) => {
	return $4;
}${3:;}
endsnippet

snippet ec=> "Export const Function" bA
export const ${1:name} = (${2:args}) => {
	return $4;
}
endsnippet

snippet if "If condition"
if (${1:condition}) {
  ${0}
}
endsnippet

snippet ife "If else condition"
if (${1:condition}) {
  ${2}
} else {
  ${0}
}
endsnippet

snippet switch
switch (${1:condition}) {
  case ${2:when}:
    ${0}
}
endsnippet

snippet cl "console.log(...)"
console.log(${1})
endsnippet


snippet cln "console.log(...)"
console.log('${2:$1: }', ${1});
endsnippet

snippet desc "Jest - describe(name, fn)"
describe('$1', () => {
	${VISUAL}$0
});
endsnippet

snippet test "Jest - test(name, fn)"
test('$1', () => {
	$2
});
endsnippet

snippet it "Jest - alias for test()"
it('$1', () => {
	$2
});
endsnippet

snippet aftera "Jest - afterAll(fn)"
afterAll(() => {
	$1
});
endsnippet

snippet aftere "Jest - afterEach(fn)"
afterEach(() => {
	$1
});
endsnippet

snippet beforea "Jest - beforeAll(fn)"
beforeAll(() => {
	$1
});
endsnippet

snippet beforee "Jest - beforeEach(fn)"
beforeEach(() => {
	$1
});
endsnippet
